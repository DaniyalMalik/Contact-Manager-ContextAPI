{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","style","cursor","onClick","color","float","bind","to","paddingRight","defaultProps","Contacts","Fragment","Header","branding","About","TextInputGroup","label","placeholder","onChange","htmlFor","required","AddContact","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","match","params","updatedContact","put","NotFound","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc723b19.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        // ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        // ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({\r\n      contacts: res.data,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./contact.css\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contacts;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"contact-parent\">\r\n              <h3>\r\n                {name}{\" \"}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    });\r\n                  }}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>{\" \"}\r\n                <Link to={`/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      paddingRight: \"5px\",\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h3>\r\n              {showContactInfo ? (\r\n                <ul>\r\n                  <li>Email: {email}</li>\r\n                  <li>Contact: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.defaultProps = {\r\n  name: \"Malik\",\r\n  email: \"x_x@xmail.com\",\r\n  phone: \"03xx-xxxxxxx\",\r\n};\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"../contacts/Contact\";\r\nimport { Consumer } from \"../../Context\";\r\nimport \"./contacts.css\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <div className=\"contacts-parent\">\r\n                <h1>\r\n                  <span className=\"contacts-span\">Contact</span> List\r\n                </h1>\r\n                {contacts.map((contact) => (\r\n                  <Contact contacts={contact} />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <ul className=\"header-parent\">\r\n      <div className=\"header-name\">\r\n        <h3>{props.branding}</h3>\r\n      </div>\r\n      <div className=\"header-items\">\r\n        <li>\r\n          <Link to=\"/\">\r\n            <i className=\"fas fa-home\" /> Home\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/add\">\r\n            <i className=\"fas fa-plus\" /> Add\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">\r\n            <i className=\"fas fa-question\" /> About\r\n          </Link>\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./about.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className = \"about-parent\">\r\n      <h1>About Contact Manager</h1>\r\n      <p>It is a simple app to manage your contacts!</p>\r\n      <p className = \"about-suffix\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange\r\n}) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor={name}>{label}</label>\r\n      <li>\r\n        <input\r\n          name={name}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n          required\r\n        />\r\n      </li>\r\n    </div>\r\n  );\r\n};  \r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport \"./addcontact.css\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <form\r\n              className=\"addcontact-parent\"\r\n              onSubmit={this.onSubmit.bind(this, dispatch)}\r\n            >\r\n              <div className=\"addcontact-child1\">\r\n                <h3>Add Contact </h3>\r\n              </div>\r\n              <ul className=\"addcontact-child2\">\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter name...\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email...\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Enter phone...\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                />\r\n                <li>\r\n                  <input type=\"submit\" value=\"Add Contact\" />\r\n                </li>\r\n              </ul>\r\n            </form>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport \"./editcontact.css\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const { id } = this.props.match.params;\r\n    const updatedContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updatedContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <form\r\n              className=\"editcontact-parent\"\r\n              onSubmit={this.onSubmit.bind(this, dispatch)}\r\n            >\r\n              <div className=\"editcontact-child1\">\r\n                <h3>Edit Contact </h3>\r\n              </div>\r\n              <ul className=\"editcontact-child2\">\r\n                <TextInputGroup\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Enter name...\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email...\"\r\n                  value={email}\r\n                  onChange={this.onChange}\r\n                />\r\n                <TextInputGroup\r\n                  label=\"Phone\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Enter phone...\"\r\n                  value={phone}\r\n                  onChange={this.onChange}\r\n                />\r\n                <li>\r\n                  <input type=\"submit\" value=\"Update Contact\" />\r\n                </li>\r\n              </ul>\r\n            </form>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport \"./notfound.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"parent-notfound\">\r\n      <h1>\r\n        <span className=\"child-notfound\">404</span> Page Not Found\r\n      </h1>\r\n      <p>Sorry, this page does not exist!</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport { Provider } from \"./Context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NotFound from \"./components/pages/NotFound\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Header branding=\"Contact Manager\" />\n          <Switch>\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path=\"/add\" component={AddContact} />\n            <Route exact path=\"/edit/:id\" component={EditContact} />\n            <Route exact path=\"/about\" component={About} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}